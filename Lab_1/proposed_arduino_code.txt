#include <Servo.h>

int incoming_message=0; //variable that receives the command from the python code

int left_home_position=130; //Sets the left side home position
int horizontal_angle_track=left_home_position; //Keeps track of the horizontal angle

int down_home_position=90;
int vertical_angle_track=down_home_position; //Keeps track of the vertical angle

int horizontal_increment=1; //Sets the increment of the horizontal angle every time the move command is called
int vertical_increment=1; //Sets the increment of the vertical angle every time the move command is called

Servo horizontal_servo; //Declares a servo called horizontal_servo
Servo vertical_servo; //Declkares a servo called vertical_servo

void setup() {                

  pinMode(A5, INPUT); //Sets up the sensor in the analog pin A5    
  Serial.begin(9600); //Initializes the serial port 
  horizontal_servo.attach(7); //Declares the pin that the servo controlling horizontal angle is connected to
  vertical_servo.attach(8); //Declares the pin that the servo controlling vertical angle is connected to
}

// the loop routine runs over and over again forever:
void loop() {
  
  //Sends data only when it is received
  if (Serial.available()>0){
    
    incoming_message=Serial.read(); //Waits for a message from the serial port (in this case, from python code)
    
    if (incoming_message=='1'){ //Moves to the right
      horizontal_angle_track=horizontal_angle_track-horizontal_increment; //Decrements the horizontal angle by the specified increment to move it to the right
      horizontal_servo.write(horizontal_angle_track); //writes the new angle to the servo to move it there
    }
    
    if (incoming_message=='2'){ //Moves to the left
      horizontal_angle_track=horizontal_angle_track+horizontal_increment; //Increases the horizontal angle by the specified increment to move it to the left
      horizontal_servo.write(horizontal_angle_track); //writes the new angle to the servo to move it there
    }
    
    if (incoming_message=='3'){ //Moves the servo up
      vertical_angle_track=vertical_angle_track+vertical_increment; //Increases the vertical angle by the specified increment to move it up
      vertical_servo.write(vertical_angle_track); //Writes that angle to the servo to move it there
    }
    
    if (incoming_message=='4'){ //Moves the servo down
      vertical_angle_track=vertical_angle_track-vertical_increment; //Decreases the vertical angle by the specified increment to move it down
      vertical_servo.write(vertical_angle_track); //Writes that angle to the servo to move it there
    }

    if (incoming_message=='5'){ //Moves sensor all the way left
      horizontal_angle_track=left_home_position; //Sets the horizontal angle to the left_home_position
      horizontal_servo.write(horizontal_angle_track); //writes that angle to the servo to move it there 
    }

    if (incoming_message=='6'){ //Moves sensor to the lowest possible vertical angle setting
      vertical_angle_track=down_home_position; //Sets the vertical angle to the down_home_position
      vertical_servo.write(vertical_angle_track); //Writes that angle to the servo to move it there
    }

    if (incoming_message=='7'){
      int reading = analogRead(A5); //Takes a reading from the sensor connected to port A5
      float distance=25732.834527*pow(reading,-1.1314581); //Uses the model we derived to calculate distance from the sensor reading obtained
      Serial.println(distance); //Prints that distance to the serial port for the python code to receive
    }
    
    if (incoming_message=='8'){
      String angle_packed=String(vertical_angle_track) + ',' + String(horizontal_angle_track); //Packs the current vertical and horizontal angle into a concatenated string to print to serial port
      Serial.println(angle_packed);//Prints that concatenated string to the serial port for python to receive
    }
}
}
